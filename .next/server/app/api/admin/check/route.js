"use strict";(()=>{var e={};e.id=919,e.ids=[919],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6747:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>k,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>m,serverHooks:()=>x,staticGenerationAsyncStorage:()=>h});var n={};t.r(n),t.d(n,{GET:()=>d,dynamic:()=>c});var a=t(9303),s=t(8716),o=t(670),i=t(7070),u=t(3524);let c="force-dynamic",p=new u.PrismaClient;async function d(){try{let e=await p.user.count();return i.NextResponse.json({hasUsers:e>0})}catch(e){return console.error("Error checking user count:",e),i.NextResponse.json({error:"Internal Server Error"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/admin/check/route",pathname:"/api/admin/check",filename:"route",bundlePath:"app/api/admin/check/route"},resolvedPagePath:"C:\\Users\\kazuy\\sns\\src\\app\\api\\admin\\check\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:h,serverHooks:x}=m,k="/api/admin/check/route";function v(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:h})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[276,972],()=>t(6747));module.exports=n})();